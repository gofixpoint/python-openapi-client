# coding: utf-8

"""
    fixpoint/llmproxy/v1/service.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.llm_proxy_create_open_ai_chat_input_log_request import LLMProxyCreateOpenAIChatInputLogRequest

class TestLLMProxyCreateOpenAIChatInputLogRequest(unittest.TestCase):
    """LLMProxyCreateOpenAIChatInputLogRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LLMProxyCreateOpenAIChatInputLogRequest:
        """Test LLMProxyCreateOpenAIChatInputLogRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LLMProxyCreateOpenAIChatInputLogRequest`
        """
        model = LLMProxyCreateOpenAIChatInputLogRequest()
        if include_optional:
            return LLMProxyCreateOpenAIChatInputLogRequest(
                session_name = '',
                messages = [
                    openapi_client.models.v1_input_message.v1InputMessage(
                        role = '', 
                        content = '', )
                    ],
                temperature = 1.337,
                trace_id = '',
                user_id = '',
                mode = 'MODE_UNSPECIFIED'
            )
        else:
            return LLMProxyCreateOpenAIChatInputLogRequest(
        )
        """

    def testLLMProxyCreateOpenAIChatInputLogRequest(self):
        """Test LLMProxyCreateOpenAIChatInputLogRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
