# coding: utf-8

"""
    fixpoint/v1/service.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fixpoint_openapi.models.v1_chat_completion_choice import V1ChatCompletionChoice

class TestV1ChatCompletionChoice(unittest.TestCase):
    """V1ChatCompletionChoice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1ChatCompletionChoice:
        """Test V1ChatCompletionChoice
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1ChatCompletionChoice`
        """
        model = V1ChatCompletionChoice()
        if include_optional:
            return V1ChatCompletionChoice(
                index = 56,
                message = fixpoint_openapi.models.v1_output_message.v1OutputMessage(
                    role = '', 
                    content = '', 
                    tool_calls = [
                        fixpoint_openapi.models.v1_tool_call.v1ToolCall(
                            id = '', 
                            type = '', 
                            function = fixpoint_openapi.models.tool_call_function.ToolCallFunction(
                                name = '', 
                                arguments = '', ), )
                        ], ),
                finish_reason = ''
            )
        else:
            return V1ChatCompletionChoice(
        )
        """

    def testV1ChatCompletionChoice(self):
        """Test V1ChatCompletionChoice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
