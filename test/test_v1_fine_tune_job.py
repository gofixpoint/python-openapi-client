# coding: utf-8

"""
    fixpoint/v1/service.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fixpoint_openapi.models.v1_fine_tune_job import V1FineTuneJob

class TestV1FineTuneJob(unittest.TestCase):
    """V1FineTuneJob unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1FineTuneJob:
        """Test V1FineTuneJob
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1FineTuneJob`
        """
        model = V1FineTuneJob()
        if include_optional:
            return V1FineTuneJob(
                id = '',
                set_id = '',
                dataset_id = '',
                model_name = '',
                status = 'FINE_TUNE_STATUS_UNSPECIFIED',
                hyperparameters = fixpoint_openapi.models.v1_hyperparameters.v1Hyperparameters(
                    epochs = 56, ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                secret_alias = '',
                fine_tuned_model = '',
                provider_job_id = '',
                started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return V1FineTuneJob(
        )
        """

    def testV1FineTuneJob(self):
        """Test V1FineTuneJob"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
